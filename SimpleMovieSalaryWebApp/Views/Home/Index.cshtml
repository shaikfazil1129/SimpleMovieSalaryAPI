@model List<SimpleMovieSalaryWebApp.Models.CastMemberViewModel>

@{
    ViewData["Title"] = "Home";
    var role = ViewBag.Role as string ?? "";
}
<p>User Role: <strong>@ViewBag.Role</strong></p>
<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Cast Members</h2>
    <form method="post" asp-controller="Auth" asp-action="Logout">
        <button type="submit" class="btn btn-outline-danger">Logout</button>
    </form>
</div>

<div class="mb-3 d-flex align-items-center gap-2 flex-wrap">
    @* Fetch All: All Roles *@
    <form method="post" asp-controller="Home" asp-action="FetchAll">
        <button type="submit" class="btn btn-primary">Fetch All</button>
    </form>

    @* Fetch by ID: All Roles *@
    <form method="post" asp-controller="Home" asp-action="FetchById" class="d-flex align-items-center gap-2">
        <input type="number" name="id" class="form-control" placeholder="Enter ID" required style="width: 120px;" />
        <button type="submit" class="btn btn-secondary">Fetch</button>
    </form>

    @* Create: Admin, Owner *@
    @if (role == "Admin" || role == "Owner")
    {
        <a asp-controller="Home" asp-action="Create" class="btn btn-success">Create</a>
    }

    @* Update: Admin, Owner *@
    @if (role == "Admin" || role == "Owner")
    {
        // <button class="btn btn-warning">Update</button>
        <button id="updateButton" class="btn btn-warning" disabled>Update</button>
    }

    @* Delete: Owner Only *@
    @if (role == "Owner")
    {
        <button id="deleteButton" class="btn btn-danger" disabled>Delete</button>
    }

    <form asp-controller="Home" asp-action="DownloadExcel" method="post">
        <button type="submit" class="btn btn-success">
            Download Excel
        </button>
    </form>


</div>


@if (Model != null && Model.Any())
{
    <table class="table table-striped table-bordered mt-4">
        <thead>
            <tr>
                <th></th>
                <th>ID</th>
                <th>Name</th>
                <th>Remuneration</th>
                <th>Amount Paid</th>
                <th>Remaining Amount</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cast in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="selectedCast" value="@cast.Id" class="row-checkbox" />
                    </td>
                    <td>@cast.Id</td>
                    <td>@cast.Name</td>
                    <td>@cast.Remuneration</td>
                    <td>@cast.AmountPaid</td>
                    <td>@cast.RemainingAmount</td>
                    <td>@cast.Status</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data to show. Click one of the fetch buttons above.</p>
}
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Checkbox logic for update/delete buttons
            const checkboxes = document.querySelectorAll('.row-checkbox');
            const updateBtn = document.getElementById('updateButton');
            const deleteBtn = document.getElementById('deleteButton');

            function updateButtonStates() {
                const checked = Array.from(checkboxes).filter(cb => cb.checked);
                updateBtn && (updateBtn.disabled = checked.length !== 1);
                deleteBtn && (deleteBtn.disabled = checked.length === 0);
            }

            checkboxes.forEach(cb => {
                cb.addEventListener('change', updateButtonStates);
            });

            updateBtn?.addEventListener('click', function () {
                const checked = Array.from(checkboxes).filter(cb => cb.checked);
                if (checked.length === 1) {
                    const id = checked[0].value;
                    const url = '@Url.Action("Update", "Home")' + '?id=' + id;
                    window.location.href = url;
                }
            });

            deleteBtn?.addEventListener('click', async function () {
                const confirmed = confirm("Are you sure you want to delete the selected item(s)?");
                if (!confirmed) return;

                const checked = Array.from(checkboxes).filter(cb => cb.checked);
                const ids = checked.map(cb => cb.value);

                for (let id of ids) {
                    await fetch(`@Url.Action("Delete", "Home")/${id}`, {
                        method: 'POST'
                    });
                }

                window.location.reload();
            });

            updateButtonStates(); // initialize state

            // Excel export button logic
        });
    </script>
}

